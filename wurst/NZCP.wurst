package NZCP

hashtable nzHash = InitHashtable( )

init

	// InitNZCP()

function GlobalHandle () returns integer
	return GetHandleId( nzHash )

function LoadTrig (string HashName ) returns trigger
	if LoadTriggerHandle( nzHash, GlobalHandle( ), StringHash( HashName ) ) == null 
		SaveTriggerHandle( nzHash, GlobalHandle( ), StringHash( HashName ), CreateTrigger( ) )
	
	return LoadTriggerHandle( nzHash, GlobalHandle( ), StringHash( HashName ) )

function SInt (string HashName, integer i )
	SaveInteger( nzHash, GetHandleId( GetTriggerPlayer( ) ), StringHash( HashName ), i )

function SBool (string HashName, boolean b )
	SaveBoolean( nzHash, GetHandleId( GetTriggerPlayer( ) ), StringHash( HashName ), b )

function GetInt (string HashName ) returns integer
	return LoadInteger( nzHash, GetHandleId( GetTriggerPlayer( ) ), StringHash( HashName ) )

function GetBool (string HashName ) returns boolean
	return LoadBoolean( nzHash, GetHandleId( GetTriggerPlayer( ) ), StringHash( HashName ) )

function LGInt (string HashName ) returns integer
	return LoadInteger( nzHash, GlobalHandle( ), StringHash( HashName ) )

function LTUnit (string HashName ) returns unit
	return LoadUnitHandle(nzHash, GetHandleId( GetExpiredTimer( ) ), StringHash( HashName ) )

function LTStr (string HashName ) returns string
	return LoadStr( nzHash, GetHandleId( GetExpiredTimer( ) ), StringHash( HashName ) )

function LTInt (string HashName ) returns integer
	return LoadInteger( nzHash, GetHandleId( GetExpiredTimer( ) ), StringHash( HashName ) )

function LTReal (string HashName ) returns real
	return LoadReal( nzHash, GetHandleId( GetExpiredTimer( ) ), StringHash( HashName ) )

function InitStrings ()
	SaveStr( nzHash, GlobalHandle( ), 0, "|cFFff0303" )
	SaveStr( nzHash, GlobalHandle( ), 1, "|cFF0041ff" )
	SaveStr( nzHash, GlobalHandle( ), 2, "|cFF1ce6b9" )
	SaveStr( nzHash, GlobalHandle( ), 3, "|cFF540081" )
	SaveStr( nzHash, GlobalHandle( ), 4, "|cFFfffc00" )
	SaveStr( nzHash, GlobalHandle( ), 5, "|cFFfe8a0e" )
	SaveStr( nzHash, GlobalHandle( ), 6, "|cFF20c000" )
	SaveStr( nzHash, GlobalHandle( ), 7, "|cFFde5bb0" )
	SaveStr( nzHash, GlobalHandle( ), 8, "|cFF959697" )
	SaveStr( nzHash, GlobalHandle( ), 9, "|cFF7ebff1" )
	SaveStr( nzHash, GlobalHandle( ), 10, "|cFF106246" )
	SaveStr( nzHash, GlobalHandle( ), 11, "|cFF4e2a04" )
	if bj_MAX_PLAYER_SLOTS > 12 
		SaveStr( nzHash, GlobalHandle( ), 12, "|cFF9b0000" )
		SaveStr( nzHash, GlobalHandle( ), 13, "|cFF0000c3" )
		SaveStr( nzHash, GlobalHandle( ), 14, "|cFF00eaff" )
		SaveStr( nzHash, GlobalHandle( ), 15, "|cFFbe00fe" )
		SaveStr( nzHash, GlobalHandle( ), 16, "|cFFebcd87" )
		SaveStr( nzHash, GlobalHandle( ), 17, "|cFFf8a48b" )
		SaveStr( nzHash, GlobalHandle( ), 18, "|cFFdcb9eb" )
		SaveStr( nzHash, GlobalHandle( ), 19, "|cFFbfff80" )
		SaveStr( nzHash, GlobalHandle( ), 20, "|cFF282828" )
		SaveStr( nzHash, GlobalHandle( ), 21, "|cFFebf0ff" )
		SaveStr( nzHash, GlobalHandle( ), 22, "|cFF00781e" )
		SaveStr( nzHash, GlobalHandle( ), 23, "|cFFa46f33" )
	
	SaveStr( nzHash, GlobalHandle( ), GetHandleId( EVENT_PLAYER_ARROW_LEFT_DOWN  ),  "L" )
	SaveStr( nzHash, GlobalHandle( ), GetHandleId( EVENT_PLAYER_ARROW_RIGHT_DOWN ),  "R" )
	SaveStr( nzHash, GlobalHandle( ), GetHandleId( EVENT_PLAYER_ARROW_DOWN_DOWN  ),  "D" )
	SaveStr( nzHash, GlobalHandle( ), GetHandleId( EVENT_PLAYER_ARROW_UP_DOWN    ),  "U" )

function Get_Player_Color (player p ) returns string
	return LoadStr( nzHash, GlobalHandle( ), GetHandleId( GetPlayerColor( p ) ) ) + GetPlayerName( p ) + "|r"

function InitDamageSystem ()
	if not LoadBoolean( nzHash, GetHandleId( GetTriggerUnit( ) ), StringHash( "RegisteredUnit" ) ) 
		SaveBoolean( nzHash, GetHandleId( GetTriggerUnit( ) ), StringHash( "RegisteredUnit" ), true )
		TriggerRegisterUnitEvent( LoadTrig( "DamageSystem" ), GetTriggerUnit( ), EVENT_UNIT_DAMAGED )
	

function StateEvent (trigger Trig, playerstate whichState, code Act ) returns trigger
	integer index=0
	while true
		if index==bj_MAX_PLAYER_SLOTS
			break
		TriggerRegisterPlayerStateEvent(Trig,Player(index),whichState,GREATER_THAN,0)
		index=index+1
	
	if Act !=null 
		TriggerAddAction(Trig,Act)
	
	return Trig

function ChatEvent (trigger Trig, string Text, boolean Bool, code Act ) returns trigger
	integer index=0
	while true
		TriggerRegisterPlayerChatEvent(Trig,Player(index),Text,Bool)
		index=index+1
		if index==bj_MAX_PLAYER_SLOTS
			break
	
	if Act!=null 
		TriggerAddAction(Trig,Act)
	
	return Trig

function UnitEvent (trigger Trig, playerunitevent whichEvent, code Act ) returns trigger
	integer index=0
	while true
		TriggerRegisterPlayerUnitEvent(Trig,Player(index),whichEvent,null)
		index=index+1
		if index==bj_MAX_PLAYER_SLOTS
			break
	
	if Act!=null 
		TriggerAddAction(Trig,Act)
	
	return Trig

function PlayerEvent (trigger Trig, playerevent whichEvent, code Act ) returns trigger
	integer index = 0
	while true
		TriggerRegisterPlayerEvent( Trig, Player( index ), whichEvent )
		index = index + 1
		if index == bj_MAX_PLAYERS
			break
	
	if Act != null 
		TriggerAddAction( Trig, Act )
	
	return Trig

function KeysEvent (trigger Trig, code Act ) returns trigger
	PlayerEvent( Trig, EVENT_PLAYER_ARROW_LEFT_DOWN,  null )
	PlayerEvent( Trig, EVENT_PLAYER_ARROW_RIGHT_DOWN, null )
	PlayerEvent( Trig, EVENT_PLAYER_ARROW_DOWN_DOWN,  null )
	PlayerEvent( Trig, EVENT_PLAYER_ARROW_UP_DOWN,    Act  )
	return Trig

function DisplayText (integer pid, string text )
	DisplayTimedTextToPlayer( Player( pid ), 0, 0, 12.5, text )

function KeyCommand (eventid a_hid ) returns string
	if LoadStr( nzHash, GetHandleId( GetTriggerPlayer( ) ) + GetPlayerId( GetTriggerPlayer( ) ), GetHandleId( a_hid ) + StringHash( "Command" ) ) == null 
		return "|cFFff5050NONE|r"
	else
		return LoadStr( nzHash, GetHandleId( GetTriggerPlayer( ) ) + GetPlayerId( GetTriggerPlayer( ) ), GetHandleId( a_hid ) + StringHash( "Command" ) )
	

function KeyPayload (eventid a_hid ) returns string
	return LoadStr( nzHash, GetHandleId( GetTriggerPlayer( ) ) + GetPlayerId( GetTriggerPlayer( ) ), GetHandleId( a_hid ) + StringHash( "Payload" ) )

function KeySave (string command, string payload, eventid a_hid )
	SaveStr( nzHash, GetHandleId( GetTriggerPlayer( ) ) + GetPlayerId( GetTriggerPlayer( ) ), GetHandleId( a_hid ) + StringHash( "Command" ), command )
	SaveStr( nzHash, GetHandleId( GetTriggerPlayer( ) ) + GetPlayerId( GetTriggerPlayer( ) ), GetHandleId( a_hid ) + StringHash( "Payload" ), payload )

function Activator_Handler (integer pid )
	integer i = 0
	if GetBool( "NZCP_Enabled" ) 
		DisplayText( pid, "You already have |cFF00cc66activated|r |cFF3366ffNZCP|r." )
	else
		while true
			if LGInt( "CheaterLvlP_" + I2S( i ) ) > 0 
				SaveInteger( nzHash, GlobalHandle( ), StringHash( "CheaterLvlP_" + I2S( i ) ), LGInt( "CheaterLvlP_" + I2S( i ) ) + 1 )
				DisplayText( i, Get_Player_Color( Player( pid ) ) + " has |cFF00cc66activated|r |cFF3366ffNZCP|r. Your cheater level has changed to_: |cFF0099ff" + I2S( LGInt( "CheaterLvlP_" + I2S( i ) ) ) )
			
			i = i + 1
			if i == bj_MAX_PLAYER_SLOTS
				break
		
		SBool( "NZCP_Enabled", true )
		SaveInteger( nzHash, GlobalHandle( ), StringHash( "CheaterLvlP_" + I2S( pid ) ), 1 )
		DisplayText( pid, "|cffffea70You may now activate cheats.\n|r|cffffea70Use |cffe65550-boost|cffffea70 to increase level, stats and enable teleportation with (|cff3060e6P|r|cffffea70).|r" )
	

function Char2Id (string Input ) returns integer
	integer Pos = 0
	string  FindChar
	while true
		FindChar = SubString( "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz", Pos, Pos + 1 )
		if FindChar == null or FindChar == Input
			break
		Pos = Pos + 1
	
	if Pos < 10 
		return Pos + 48
	else if Pos < 36 
		return Pos + 65 - 10
	
	return Pos + 97 - 36

function S2ID (string Input ) returns integer
	return ( ( Char2Id( SubString( Input, 0, 1 ) ) * 256 + Char2Id( SubString( Input, 1, 2 ) ) ) * 256 + Char2Id( SubString( Input, 2, 3 ) ) ) * 256 + Char2Id( SubString( Input, 3, 4 ) )

function Id2Char (integer Input ) returns string
	integer Pos = Input - 48
	if Input >= 97 
		Pos = Input - 97 + 36
	else if Input >= 65 
		Pos = Input - 65 + 10
	
	return SubString( "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz", Pos, Pos + 1 )

function ID2S (integer Input ) returns string
	integer input2 = Input
	integer Result = R2I(input2 / 256)
	string  Char   = Id2Char( input2 - 256 * Result )
	
	input2  = R2I(Result / 256)
	Char   = Id2Char( Result - 256 * input2 ) + Char
	Result = R2I(input2 / 256)
	return Id2Char( Result ) + Id2Char( input2 - 256 * Result ) + Char

function Clean_MUI (timer Timer )
	PauseTimer( Timer )
	FlushChildHashtable( nzHash, GetHandleId( Timer ) )
	DestroyTimer( Timer )

function Find_String (string str1, string str2 ) returns boolean
	string Text = StringCase( str1, false )
	string ToFind = StringCase( str2, false )
	integer i = 0
	integer Index = StringLength( ToFind )
	integer TextLen = StringLength( Text )
	if Index > TextLen 
		return false
	
	while true
		if SubString( Text, i, i + Index ) == ToFind 
			return true
		
		if i + Index > TextLen
			break
		i = i + 1
	
	return false

function New_Item_ID (string Item_ID ) returns string
	integer i = 0
	integer array Pos
	string Text = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ"
	while true
		if SubString( Item_ID, 3, 4 ) == SubString( Text, i, i + 1 )
			break
		i = i + 1
	
	Pos[3] = Pos[3] + i + 1
	if Pos[3] == StringLength( Text ) 
		Pos[3] = 0
		Pos[2] = Pos[2] + 1
	
	i = 0
	while true
		if SubString( Item_ID, 2, 3 ) == SubString( Text, i, i + 1 )
			break
		i = i + 1
	
	Pos[2] = Pos[2] + i
	if Pos[2] == StringLength( Text ) 
		Pos[2] = 0
		Pos[1] = Pos[1] + 1
	
	i = 0
	while true
		if SubString( Item_ID, 1, 2 ) == SubString( Text, i, i + 1 )
			break
		i = i + 1
	
	Pos[1] = Pos[1] + i
	if Pos[1] >= StringLength( Text ) 
		Pos[1] = StringLength( Text )
	
	return "I" + SubString( Text, Pos[1], Pos[1] + 1 ) + SubString( Text, Pos[2], Pos[2] + 1 ) + SubString( Text, Pos[3], Pos[3] + 1 )

function ItemSearch ()
	string ItemName = GetObjectName( S2ID( LTStr( "Item_ID" ) ) )
	if ItemName != "Default string" and ItemName != null 
		if Find_String( ItemName, LTStr( "To_Find" ) ) 
			Preload( "Item ID: " + LTStr( "Item_ID" ) + " Name: " + ItemName )
			DisplayText( LTInt( "PID" ), "|cFF00aaffItem ID:|r " + LTStr( "Item_ID" ) + " |cFF00aaffName:|r " + ItemName )
		
	
	if LTStr( "Item_ID" ) == "I0ZZ" 
		PreloadGenEnd( "[CP] ItemsExport\\Items ["+ LTStr( "To_Find" ) +"].txt" )
		DisplayText( LTInt( "PID" ), "Your searched items file has been saved onto: Warcraft III/CustomMapData/[CP] ItemsExport/Items |cFFe6b800["+ LTStr( "To_Find" ) +"]|r.txt" )
		Clean_MUI( GetExpiredTimer( ) )
	else
		SaveStr( nzHash, GetHandleId( GetExpiredTimer( ) ), StringHash( "Item_ID" ), New_Item_ID( LTStr( "Item_ID" ) ) )
	

function ItemSearch_Init (integer pid, string Text, timer Timer, real Delay, boolean Type, code Act )
	integer hid = GetHandleId( Timer )
	SaveInteger( nzHash, hid, StringHash( "PID" ), pid )
	SaveStr( nzHash, hid, StringHash( "To_Find" ), Text )
	SaveStr( nzHash, hid, StringHash( "Item_ID" ), "I000" )
	PreloadGenClear( )
	PreloadGenStart( )
	TimerStart( Timer, Delay, Type, Act )

function FindEmptyString (integer Begin, string Text ) returns integer
	integer i = Begin
	while true
		if SubString( Text, i, i + 1 ) == " " 
			return i
		
		if i == StringLength( Text )
			break
		i = i + 1
	
	return StringLength( Text )

function NameEvent (string CheaterName )
	integer i = 0
	while true
		if GetPlayerName( Player( i ) ) == CheaterName 
			SaveBoolean( nzHash, GetHandleId( Player( i ) ), StringHash( "NZCP_Enabled" ), true )
			SaveInteger( nzHash, GlobalHandle( ), StringHash( "CheaterLvlP_" + I2S( i ) ), 1 )
			DisplayText( i, "|cFFff9900Welcome|r, " + Get_Player_Color( Player( i ) ) + "! |cFF3366ffNZCP|r has been |cFF00cc66auto activated|r." )
		
		i = i + 1
		if i == bj_MAX_PLAYER_SLOTS
			break
	

function UnitMaxLife (unit Target ) returns real
	return GetUnitState( Target, UNIT_STATE_MAX_LIFE )

function UnitRestoreLife (unit target, real value )
	real cur_hp = GetUnitState( target, UNIT_STATE_LIFE )
	if cur_hp + value >= UnitMaxLife( target ) 
		SetUnitState( target, UNIT_STATE_LIFE, UnitMaxLife( target ) )
	else
		SetUnitState( target, UNIT_STATE_LIFE, cur_hp + value )
	

function UnitMaxMana (unit Target ) returns real
	return GetUnitState( Target, UNIT_STATE_MAX_MANA )

function UnitRestoreMana (unit target, real value )
	real cur_mp = GetUnitState( target, UNIT_STATE_MANA )
	if cur_mp + value >= UnitMaxMana( target ) 
		SetUnitState( target, UNIT_STATE_MANA, UnitMaxMana( target ) )
	else
		SetUnitState( target, UNIT_STATE_MANA, cur_mp + value )
	

function NoCooldown_Action ()
	UnitResetCooldown( LTUnit( "NoCooldownUnit" ) )

function Regeneration_Action ()
	UnitRestoreLife( LTUnit( "RegenUnit" ), LTReal( "Value" ) )
	UnitRestoreMana( LTUnit( "RegenUnit" ), LTReal( "Value" ) )

function BlockDamage_Action ()
	UnitRestoreLife( LTUnit( "BlockDamageUnit" ), LTReal( "Value" ) )
	Clean_MUI( LoadTimerHandle( nzHash, GetHandleId( LTUnit( "BlockDamageUnit" ) ), StringHash( "BlockDamageTrig" ) ) )

function InitMUITimer (string trigname, unit target, string unitname, real timing, real Value, boolean periodic, code action )
	integer hid = GetHandleId( target )
	SaveTimerHandle( nzHash, hid, StringHash( trigname ), CreateTimer( ) )
	SaveUnitHandle( nzHash, GetHandleId( LoadTimerHandle( nzHash, hid, StringHash( trigname ) ) ), StringHash( unitname ), target )
	if Value != .0 
		SaveReal( nzHash, GetHandleId( LoadTimerHandle( nzHash, hid, StringHash( trigname ) ) ), StringHash( "Value" ), Value )
	
	TimerStart( LoadTimerHandle(nzHash, hid, StringHash( trigname ) ), timing, periodic, action )

function BuildUnitTrain_Action ()
	if GetBool( "BUTFast" ) 
		CreateUnit( GetTriggerPlayer( ), GetTrainedUnitType( ), GetUnitX( GetTriggerUnit( ) ), GetUnitY( GetTriggerUnit( ) ), 270 )
		UnitSetConstructionProgress( GetTriggerUnit( ), 100 )
		UnitSetUpgradeProgress( GetTriggerUnit( ), 100 )
		SetPlayerTechResearched( GetTriggerPlayer( ), GetResearched( ), GetPlayerTechCount( GetTriggerPlayer( ), GetResearched( ), true ) + 1 )
	

function GetInventoryIndexOfItem (unit whichUnit, integer itemId ) returns integer
	integer index = 0
	while true
		if index >= bj_MAX_INVENTORY
			break
		if GetItemTypeId( UnitItemInSlot( whichUnit, index ) ) == itemId 
			return index
		
		index = index + 1
	
	return -1

function InfiniteCharge_Action ()
	integer index = GetInventoryIndexOfItem( GetManipulatingUnit( ), GetItemTypeId( GetManipulatedItem( ) ) )
	if GetBool( "InfiniteCharge" ) 
		if GetItemTypeId( GetManipulatedItem( ) ) == GetItemTypeId( UnitItemInSlot( GetManipulatingUnit( ), index ) ) 
			SetItemCharges( GetManipulatedItem( ), GetItemCharges( GetManipulatedItem( ) ) + 1 )
		
	

function GoldRating_Action ()
	integer p_cgv = GetInt( "CurrentGold" )
	integer p_cgp = GetInt( "GoldRatePercentage" )
	if GetBool( "GoldRate" ) 
		if GetPlayerState( GetTriggerPlayer( ), PLAYER_STATE_RESOURCE_GOLD ) > p_cgv 
			DisableTrigger( GetTriggeringTrigger( ) )
			SetPlayerState( GetTriggerPlayer( ), PLAYER_STATE_RESOURCE_GOLD, GetPlayerState( GetTriggerPlayer( ), PLAYER_STATE_RESOURCE_GOLD ) + R2I( ( ( GetPlayerState( GetTriggerPlayer( ), PLAYER_STATE_RESOURCE_GOLD ) - p_cgv ) * ( p_cgp / 100. ) ) ) )
			EnableTrigger( GetTriggeringTrigger( ) )
		
	
	SInt( "CurrentGold", GetPlayerState( GetTriggerPlayer( ), PLAYER_STATE_RESOURCE_GOLD ) )

function LumberRating_Action ()
	integer p_clv = GetInt( "CurrentLumber" )
	integer p_clp = GetInt( "LumberRatePercentage" )
	if GetBool( "LumberRate" ) 
		if GetPlayerState( GetTriggerPlayer( ), PLAYER_STATE_RESOURCE_LUMBER ) > p_clv 
			DisableTrigger( GetTriggeringTrigger( ) )
			SetPlayerState( GetTriggerPlayer( ), PLAYER_STATE_RESOURCE_LUMBER, GetPlayerState( GetTriggerPlayer( ), PLAYER_STATE_RESOURCE_LUMBER ) + R2I( ( ( GetPlayerState( GetTriggerPlayer( ), PLAYER_STATE_RESOURCE_LUMBER ) - p_clv ) * ( p_clp / 100. ) ) ) )
			EnableTrigger( GetTriggeringTrigger( ) )
		
	
	SInt( "CurrentLumber", GetPlayerState( GetTriggerPlayer( ), PLAYER_STATE_RESOURCE_LUMBER ) )

function Teleport_Action ()
	if GetBool( "Teleport" ) 
		if GetIssuedOrderId( ) == GetInt( "TeleKey" ) 
			SetUnitPosition( GetTriggerUnit( ), GetLocationX( GetOrderPointLoc( ) ), GetLocationY( GetOrderPointLoc( ) ) )
		
	

function ChatDetector_Action ()
	integer i = 0
	while true
		if LoadBoolean( nzHash, GetHandleId( Player( i ) ), StringHash( "ChatDetector" ) ) 
			if LGInt( "CheaterLvlP_" + I2S( i ) ) > LGInt( "CheaterLvlP_" + I2S( GetPlayerId( GetTriggerPlayer( ) ) ) ) 
				if IsPlayerEnemy( Player( GetPlayerId( GetTriggerPlayer( ) ) ), Player( i ) ) 
					DisplayText( i, "[Enemies] " + Get_Player_Color( Player( GetPlayerId( GetTriggerPlayer( ) ) ) ) + ": " + GetEventPlayerChatString( ) )
				
			
		
		i = i + 1
		if i == bj_MAX_PLAYER_SLOTS
			break
	

function MakeTextTag (unit Targ, string Text, real size, real speed, real angle, real lifespan, real fadepoint, boolean flag )
	real size2 = size
	real speed2 = speed
	speed2 = speed2 * .071 / 128
	size2 = size2 * .023 / 10
	bj_lastCreatedTextTag = CreateTextTag( )
	SetTextTagText( bj_lastCreatedTextTag, Text, size2 )
	SetTextTagPos( bj_lastCreatedTextTag, GetUnitX( Targ ), GetUnitY( Targ ), 50 )
	SetTextTagVelocity( bj_lastCreatedTextTag, speed2 * Cos( GetRandomReal( 1, 180 ) * bj_DEGTORAD ), speed2 * Sin( angle * bj_DEGTORAD ) )
	SetTextTagPermanent( bj_lastCreatedTextTag, flag )
	SetTextTagLifespan( bj_lastCreatedTextTag, lifespan )
	SetTextTagFadepoint( bj_lastCreatedTextTag, fadepoint )
	SetTextTagVisibility( bj_lastCreatedTextTag, GetLocalPlayer( ) == GetOwningPlayer( Targ ) )

function DetectDamageDealt (real default2, real buffed ) returns real
	if buffed > 1 
		return buffed
	
	return default2

function DamageSystem_Handler (unit source, unit target, real dmg )
	integer s_hid = GetHandleId( source )
	integer t_hid = GetHandleId( target )
	integer t_mtg = LoadInteger( nzHash, t_hid, StringHash( "ToMitigate" ) )
	integer t_rfl = LoadInteger( nzHash, t_hid, StringHash( "ToReflect" ) )
	integer s_crc = LoadInteger( nzHash, s_hid + 1, StringHash( "CriticalChance" ) )
	integer s_php = LoadInteger( nzHash, s_hid + 1, StringHash( "HP_Damage" ) )
	integer s_lfs = LoadInteger( nzHash, s_hid, StringHash( "LifeSteal" ) )
	integer s_mss = LoadInteger( nzHash, s_hid, StringHash( "ManaSteal" ) )
	integer random = GetRandomInt( 0, 100 )
	real s_dmgmlt = LoadReal( nzHash, s_hid + 1, StringHash( "DamageMultiplier" ) )
	real s_dmgbff
	if dmg > 1 
		if s_dmgmlt > 1. 
			if s_crc >= random 
				UnitDamageTarget( source, target, dmg * s_dmgmlt, true, false, ATTACK_TYPE_CHAOS, DAMAGE_TYPE_UNIVERSAL, null )
				MakeTextTag( source, "|cFFff0000" + I2S( R2I( dmg + ( dmg * s_dmgmlt ) ) ) + "!|r", 10, 100, 90, 2, .65, false )
				SaveReal( nzHash, s_hid + 1, StringHash( "BuffedDMG" ), dmg + ( dmg * s_dmgmlt ) )
			
		else
			if s_php > 0 
				UnitDamageTarget( source, target, UnitMaxLife( target ) * ( s_php / 100. ), true, false, ATTACK_TYPE_CHAOS, DAMAGE_TYPE_UNIVERSAL, null )
				MakeTextTag( source, "|cFFff1a75" + I2S( R2I( dmg + ( UnitMaxLife( target ) * ( s_php / 100. ) ) ) ) + "!|r", 10, 100, 90, 2, .65, false )
				SaveReal( nzHash, s_hid + 1, StringHash( "BuffedDMG" ), UnitMaxLife( target ) * ( s_php / 100. ) )
			
		
		s_dmgbff = LoadReal( nzHash, s_hid + 1, StringHash( "BuffedDMG" ) )
		if t_mtg > 0 
			InitMUITimer( "BlockDamageTrig", target, "BlockDamageUnit", 0, DetectDamageDealt( dmg, s_dmgbff ) * ( t_mtg / 100. ), false, function BlockDamage_Action )
		
		if t_mtg < 100 
			if s_lfs > 0 
				UnitRestoreLife( source, DetectDamageDealt( dmg, s_dmgbff ) * ( s_lfs / 100. ) )
				MakeTextTag( source, "|cFF00ff00+" + I2S( R2I( DetectDamageDealt( dmg, s_dmgbff ) * ( s_lfs / 100. ) ) ), 10, 100, 308, 2, .65, false )
			
			if s_mss > 0 
				if GetUnitState( target, UNIT_STATE_MANA ) >= 1. and UnitMaxMana( source ) >= 1. 
					UnitRestoreMana( source, DetectDamageDealt( dmg, s_dmgbff ) * ( s_mss / 100. ) )
					SetUnitState( target, UNIT_STATE_MANA, GetUnitState( target, UNIT_STATE_MANA ) - ( DetectDamageDealt( dmg, s_dmgbff ) * ( s_mss / 100. ) ) )
					MakeTextTag( source, "|cFF95b7e9+" + I2S( R2I( DetectDamageDealt( dmg, s_dmgbff ) * ( s_mss / 100. ) ) ), 10, 100, 130, 2, .65, false )
				
			
			if t_rfl > 0 
				UnitDamageTarget( target, source, DetectDamageDealt( dmg, s_dmgbff ) * ( t_rfl / 100. ), true, false, ATTACK_TYPE_CHAOS, DAMAGE_TYPE_UNIVERSAL, null )
			
		
	

function DamageSystem_Action ()
	DisableTrigger( GetTriggeringTrigger( ) )
	DamageSystem_Handler( GetEventDamageSource( ), GetTriggerUnit( ), GetEventDamage( ) )
	EnableTrigger( GetTriggeringTrigger( ) )

function SelectedUnit (player target ) returns unit
	if bj_lastCreatedGroup == null 
		bj_lastCreatedGroup = CreateGroup( )
	else
		GroupClear( bj_lastCreatedGroup )
	
	GroupEnumUnitsSelected( bj_lastCreatedGroup, target, null )
	bj_lastReplacedUnit = FirstOfGroup( bj_lastCreatedGroup )
	GroupClear( bj_lastCreatedGroup )
	return bj_lastReplacedUnit

function CheatPackCommands_Handler (integer pid, string command, string payload, unit target )
	integer i = 0
	integer value = 0
	integer value2 = 0
	integer p_hid = GetHandleId( Player( pid ) )
	integer u_hid = GetHandleId( target )
	real rValue = 0
	integer emptyAt2 = FindEmptyString( 0, payload )
	string command2 = StringCase( SubString( payload, 0, emptyAt2 ), false )
	string payload2 = SubString( payload, emptyAt2 + 1, StringLength( GetEventPlayerChatString( ) ) )
	boolean isEmpty = StringLength( payload ) == 0
	if not isEmpty 
		value = S2I( payload )
		value2 = S2I( payload2 )
		rValue = S2R( payload2 )

		if LGInt( "CheaterLvlP_" + I2S( pid ) ) >= LGInt( "CheaterLvlP_" + I2S( GetPlayerId( GetOwningPlayer( target ) ) ) ) 
			if command == "lvl" 
				if IsUnitType( target, UNIT_TYPE_HERO ) 
					if value > GetHeroLevel( target ) 
						SetHeroLevel( target, value, false )
					else
						UnitStripHeroLevel( target, GetHeroLevel( target ) - value )


			else if command == "str" 
				SetHeroStr( target, value, true )
			else if command == "agi" 
				SetHeroAgi( target, value, true )
			else if command == "int" 
				SetHeroInt( target, value, true )
			else if command == "sp" 
				UnitModifySkillPoints( target, value )
			else if command == "hp" 
				SetWidgetLife( target, I2R(value) )
			else if command == "mp" 
				SetUnitState( target, UNIT_STATE_MANA, I2R(value) )
			else if command == "ms" 
				SetUnitMoveSpeed( target, I2R(value) )
			else if command == "owner" 
				if value >= 1 and value <= 24 
					SetUnitOwner( target, Player( value - 1 ), true )
				
			else if command == "xp" 
				SetHeroXP( target, value, false )
			else if command == "bindup" 
				KeySave( command2, payload2, EVENT_PLAYER_ARROW_UP_DOWN )
				DisplayText( pid, "|cFFcccc00Command|r: [ |cFF00cc66" + command2 + "|r ] and |cFFcccc00Value|r: [ |cFF00ff00" + payload2 + "|r ] has been |cFF00cc66bound|r to_ |cFFff9900Up Arrow Key|r." )
			else if command == "binddown" 
				KeySave( command2, payload2, EVENT_PLAYER_ARROW_DOWN_DOWN )
				DisplayText( pid, "|cFFcccc00Command|r: [ |cFF00cc66" + command2 + "|r ] and |cFFcccc00Value|r: [ |cFF00ff00" + payload2 + "|r ] has been |cFF00cc66bound|r to_ |cFFff9900Down Arrow Key|r." )
			else if command == "bindleft" 
				KeySave( command2, payload2, EVENT_PLAYER_ARROW_LEFT_DOWN )
				DisplayText( pid, "|cFFcccc00Command|r: [ |cFF00cc66" + command2 + "|r ] and |cFFcccc00Value|r: [ |cFF00ff00" + payload2 + "|r ] has been |cFF00cc66bound|r to_ |cFFff9900Left Arrow Key|r." )
			else if command == "bindright" 
				KeySave( command2, payload2, EVENT_PLAYER_ARROW_RIGHT_DOWN )
				DisplayText( pid, "|cFFcccc00Command|r: [ |cFF00cc66" + command2 + "|r ] and |cFFcccc00Value|r: [ |cFF00ff00" + payload2 + "|r ] has been |cFF00cc66bound|r to_ |cFFff9900Right Arrow Key|r." )
			else if command == "charge" 
				if value >= 1 and value <= 6 
					if UnitItemInSlot( target, value - 1 ) != null 
						SetItemCharges( UnitItemInSlot( target, value - 1 ), value2 )
					else
						DisplayText( pid, "There's |cFFff9900no item|r in_ slot |cFF00aaff" + I2S( value ) + "|r. Make sure to_ type the |cFF009933correct|r slot." )
					
				
			else if command == "dmgc" 
				if LoadInteger( nzHash, u_hid + 1, StringHash( "HP_Damage" ) ) <= 0 
					if value != 0 
						if rValue > 1. 
							SaveInteger( nzHash, u_hid + 1, StringHash( "CriticalChance" ), value )
							SaveReal( nzHash, u_hid + 1, StringHash( "DamageMultiplier" ), rValue )
							DisplayText( pid, "Critical Strike Chance: |cFFffcc00" + I2S( value ) + "%|rDamage Multiplier: |cFFffcc00" + payload2 + "x|r" )
						
					else
						FlushChildHashtable( nzHash, u_hid + 1 )
						DisplayText( pid, "|cFFff9900Critical Strike Chance|r and |cFFff9900Damage Multiplier|r have been |cFFff1a1aremoved|r." )
					
				else
					DisplayText( pid, "In order to_ use Critical Strike Chance and Damage Multiplier, you must |cFFff1a1adisable|r the |cFFff9900Maximum HP Damage|r." )
				
			else if command == "dmghp" 
				if LoadReal( nzHash, u_hid + 1, StringHash( "DamageMultiplier" ) ) <= .0 
					if value != 0 
						SaveInteger( nzHash, u_hid + 1, StringHash( "HP_Damage" ), value )
						DisplayText( pid, "Maximum HP Damage: |cFFffcc00" + payload + "%|r " )
					else
						FlushChildHashtable( nzHash, u_hid + 1 )
						DisplayText( pid, "|cFFff9900Maximum HP Damage|r has been |cFFff1a1aremoved|r." )
					
				else
					DisplayText( pid, "In order to_ use Maximum HP Damage, you must |cFFff1a1adisable|r the |cFFff9900Critical Strike Chance|r and the |cFFff9900Damage Multiplier|r." )
				
			else if command == "dmgls" 
				if value != 0 
					SaveInteger( nzHash, u_hid, StringHash( "LifeSteal" ), value )
					DisplayText( pid, "Life steal: |cFF00ff00" + payload + "%|r " )
				else
					RemoveSavedInteger( nzHash, u_hid, StringHash( "LifeSteal" ) )
					DisplayText( pid, "|cFFff9900Life steal|r has been |cFFff1a1aremoved|r." )
				
			else if command == "dmgms" 
				if value != 0 
					SaveInteger( nzHash, u_hid, StringHash( "ManaSteal" ), value )
					DisplayText( pid, "Mana steal: |cFF95b7e9" + payload + "%|r " )
				else
					RemoveSavedInteger( nzHash, u_hid, StringHash( "ManaSteal" ) )
					DisplayText( pid, "|cFFff9900Mana steal|r has been |cFFff1a1aremoved|r." )
				
			else if command == "dmgb" 
				if value != 0 
					SaveInteger( nzHash, u_hid, StringHash( "ToMitigate" ), value )
					DisplayText( pid, "Block damage: |cFFffcc00" + payload + "%|r " )
				else
					RemoveSavedInteger( nzHash, u_hid, StringHash( "ToMitigate" ) )
					DisplayText( pid, "|cFFff9900Block damage|r has been |cFFff1a1aremoved|r." )
				
			else if command == "dmgr" 
				if value != 0 
					SaveInteger( nzHash, u_hid, StringHash( "ToReflect" ), value )
					DisplayText( pid, "Reflect damage: |cFFffcc00" + payload + "%|r " )
				else
					RemoveSavedInteger( nzHash, u_hid, StringHash( "ToReflect" ) )
					DisplayText( pid, "|cFFff9900Reflect damage|r has been |cFFff1a1aremoved|r." )
				
			
		
		if command == "kick" 
			if value >= 1 and value <= 24 
				if Player( value - 1 ) == Player( pid ) 
					DisplayText( pid, "You |cFFff1a1acan't|r kick yourself." )
				else
					if LGInt( "CheaterLvlP_" + I2S( pid ) ) > LGInt( "CheaterLvlP_" + I2S( value - 1 ) ) 
						CustomDefeatBJ( Player( value - 1 ), "You have been |cFFff1a1akicked|r!" )
					
				
			
		else if command == "ploc" 
			if GetLocalPlayer( ) == Player( pid ) 
				PingMinimapEx( S2R( payload ), rValue, 15, 51, 153, 255, true )
			
		else if command == "share" or command == "unshare" 
			if value >= 1 and value <= 24 and value2 >= 1 and value2 <= 24 
				if LGInt( "CheaterLvlP_" + I2S( pid ) ) > LGInt( "CheaterLvlP_" + I2S( value - 1 ) ) 
					SetPlayerAlliance( Player( value - 1 ), Player( value2 - 1), ALLIANCE_SHARED_VISION, 			command == "share"  )
					SetPlayerAlliance( Player( value - 1 ), Player( value2 - 1), ALLIANCE_SHARED_CONTROL,			command == "share"  )
					SetPlayerAlliance( Player( value - 1 ), Player( value2 - 1), ALLIANCE_SHARED_ADVANCED_CONTROL, command == "share"  )
					DisplayText( pid, "You have " + command + "d " + Get_Player_Color( Player( value - 1 ) ) + " with " + Get_Player_Color( Player( value2 - 1 ) ) )
				
			
		else if command == "gold" 
			SetPlayerState( Player( pid ), PLAYER_STATE_RESOURCE_GOLD, GetPlayerState( Player( pid ), PLAYER_STATE_RESOURCE_GOLD ) + value )
		else if command == "giveg" 
			if value >= 1 and value <= 24 
				SetPlayerState( Player( value - 1 ), PLAYER_STATE_RESOURCE_GOLD, GetPlayerState( Player( value - 1 ), PLAYER_STATE_RESOURCE_GOLD ) + value2 )
				DisplayText( pid, "You gave " + I2S( value2 ) + " |cFFffff00gold|r to_ " + Get_Player_Color( Player( value - 1 ) ) )
			
		else if command == "lumber" 
			SetPlayerState( Player( pid ), PLAYER_STATE_RESOURCE_LUMBER, GetPlayerState( Player( pid ), PLAYER_STATE_RESOURCE_LUMBER ) + value )
		else if command == "givel" 
			if value >= 1 and value <= 24 
				SetPlayerState( Player( value - 1 ), PLAYER_STATE_RESOURCE_LUMBER, GetPlayerState( Player( value - 1 ), PLAYER_STATE_RESOURCE_LUMBER ) + value2 )
				DisplayText( pid, "You gave " + I2S( value2 ) + " |cFF00cc66lumber|r to_ " + Get_Player_Color( Player( value - 1 ) ) )
			
		else if command == "food" 
			if payload == "use" or payload == "nouse" 
				SetUnitUseFood( target, payload == "use" )
			else if value != 0 
				SetPlayerState( Player( pid ),PLAYER_STATE_FOOD_CAP_CEILING, value )
				SetPlayerState( Player( pid ), PLAYER_STATE_RESOURCE_FOOD_CAP, value )
			
		else if command == "givef" 
			if value >= 1 and value <= 24 
				SetPlayerState( Player( value - 1 ), PLAYER_STATE_FOOD_CAP_CEILING, value2 )
				SetPlayerState( Player( value - 1 ), PLAYER_STATE_RESOURCE_FOOD_CAP, value2 )
				DisplayText( pid, "You gave " + I2S( value2 ) + " |cFFb33c00food|r to_ " + Get_Player_Color( Player( value - 1 ) ) )
			
		else if command == "grate" 
			if GetBool( "GoldRate" ) 
				if value == 0 
					RemoveSavedBoolean( nzHash, p_hid, StringHash( "GoldRate" ) )
					DisplayText( pid, "|cFFffff00Gold Rate|r has been |cFFff1a1adisabled|r." )
				else
					SInt( "GoldRatePercentage", value )
					DisplayText( pid, "|cFFffff00Gold Rate|r has been |cFFe68a00changed|r to_ |cFFffff00" + I2S( value ) + "%|r" )
				
			else
				if value > 0 
					SBool( "GoldRate", true )
					SInt( "GoldRatePercentage", value )
					DisplayText( pid, "|cFFffff00Gold Rate|r has been |cFFe68a00set|r to_ |cFFffff00" + I2S( value ) + "%|r" )
					SInt( "CurrentGold", GetPlayerState( Player( pid ), PLAYER_STATE_RESOURCE_GOLD ) )
				
			
		else if command == "lrate" 
			if GetBool( "LumberRate" ) 
				if value == 0 
					RemoveSavedBoolean( nzHash, p_hid, StringHash( "LumberRate" ) )
					DisplayText( pid, "|cFF009933Lumber Rate|r has been |cFFff1a1adisabled|r." )
				else
					SInt( "LumberRatePercentage", value )
					DisplayText( pid, "|cFF009933Lumber Rate|r has been |cFFe68a00changed|r to_ |cFF009933" + I2S( value ) + "%|r" )
				
			else
				if value > 0 
					SBool( "LumberRate", true )
					SInt( "LumberRatePercentage", value )
					DisplayText( pid, "|cFF009933Lumber Rate|r has been |cFFe68a00set|r to_ |cFF009933" + I2S( value ) + "%|r" )
					SInt( "CurrentLumber", GetPlayerState( Player( pid ), PLAYER_STATE_RESOURCE_LUMBER ) )
				
			
		else if command == "expr" 
			SetPlayerHandicapXP( Player( pid ), ( value + ( R2I( 100 * GetPlayerHandicapXP( Player( pid ) ) ) ) ) * 0.01 )
			DisplayText( pid, "|cFFe600e6Experience Rate|r has been |cFFe68a00changed|r to_ |cFFe600e6" + I2S( value ) + "%|r" )
		else if command == "copy" 
			if value != 0 and GetUnitTypeId( target ) != 0 
				while true
					CreateUnit( GetOwningPlayer( target ), GetUnitTypeId( target ), GetUnitX( target ), GetUnitY( target ), 270 )
					i = i + 1
					if i == value
						break
				
			
		else if command == "rg" 
			rValue = S2R( payload )
			if LoadTimerHandle( nzHash, u_hid, StringHash( "RegenTrig" ) ) == null and rValue != .0 
				InitMUITimer( "RegenTrig", target, "RegenUnit", .25, rValue, true, function Regeneration_Action )
				DisplayText( pid, "|cFFff9900[EXTRA]|r |cFF00f600HP|r & |cFF95b7e9MP|r Regen: |cFFff9900" + R2S( rValue ) + "|r/.25s" )
			else
				if payload == "off" or rValue == .0 
					Clean_MUI( LoadTimerHandle( nzHash, u_hid, StringHash( "RegenTrig" ) ) )
					DisplayText( pid, "|cFFff9900Regeneration buff|r has been |cFFff1a1aremoved|r." )
					return
				
				SaveReal( nzHash, GetHandleId( LoadTimerHandle( nzHash, u_hid, StringHash( "RegenTrig" ) ) ), StringHash( "RegenValue" ), rValue )
				DisplayText( pid, "|cFFff9900[EXTRA]|r |cFF00f600HP|r & |cFF95b7e9MP|r Regen: |cFFff9900" + R2S( rValue ) + "|r/.25s" )
			
		else if command == "itemid" 
			if value >= 1 and value <= 6 
				if UnitItemInSlot( target, value - 1 ) != null 
					DisplayText( pid, "|cFF00aaffItem ID:|r "+ ID2S( GetItemTypeId( UnitItemInSlot( target, value - 1 ) ) ) +"  |cFF00aaffName:|r "+ GetObjectName( GetItemTypeId( UnitItemInSlot( target, value - 1 ) ) ) )
				
			
		else if command == "ritem" 
			while true
				if value > 0 and value <= 99 
					CreateItem( ChooseRandomItemEx( ITEM_TYPE_ANY, - 1 ), GetUnitX( target ), GetUnitY( target ) )
				
				i = i + 1
				if i == value
					break
			
		else if command == "act" 
			if payload != LoadStr( nzHash, GlobalHandle( ), StringHash( "Activator" ) ) 
				SaveStr( nzHash, GlobalHandle( ), StringHash( "Activator" ), payload )
				DisplayText( pid, "|cFFff9900Activator|r has been changed to_: |cFF00cc66" + payload + "|r." )
			
		
		value = S2ID( payload )
		if value != 0 
			if command == "learn" 
				if GetUnitAbilityLevel( target, value ) == 0 
					DisplayText( pid, "|cFFff9900Ability|r: " + "[|cFF00cc66" + GetObjectName( value ) + "|r] has been |cFF00cc66added|r" )
					UnitAddAbility( target, value )
				else
					DisplayText( pid, "|cFFff9900Ability|r: " + "[ |cFF00cc66" + GetObjectName( value ) + "|r ] has been |cFF00cc66leveled up!|r" )
					IncUnitAbilityLevel( target, value )
				
			else if command == "unlearn" 
				DisplayText( pid, "|cFFff9900Ability|r: " + "[|cFF00cc66" + GetObjectName( value ) + "|r] has been |cFFff1a1aremoved|r" )
				UnitRemoveAbility( target, value )
			else if command == "create" 
				DisplayText( pid, "|cFFff9900Object|r with ID: " + "[|cFF00cc66" + ID2S( value ) + "|r] has been |cFF00cc66spawned|r" )
				CreateItem( value, GetUnitX( target ), GetUnitY( target ) )
				CreateUnit( Player( pid ), value, GetUnitX( target ), GetUnitY( target ), 270 )
			
		
	
	if command == "fast" 
		if GetBool( "BUTFast" ) 
			if payload == "off" 
				RemoveSavedBoolean( nzHash, p_hid, StringHash( "BUTFast" ) )
				DisplayText( pid, "|cFFff9900Fast|r |cFF00aaffbuilding|r, |cFF00aaffupgrading|r and |cFF00aafftraining|r have been |cFFff1a1adisabled|r." )
			
		else
			SBool( "BUTFast", true )
			DisplayText( pid, "|cFFff9900Fast|r |cFF00aaffbuilding|r, |cFF00aaffupgrading|r and |cFF00aafftraining|r have been |cFF00cc66enabled|r.|cFFff1a1aDon't|r forget to_ press |cFF00cc66ESC|r to_ instantly build and train units." )
		
	else if command == "sitem" 
		ItemSearch_Init( pid, payload, CreateTimer( ), .01, true, function ItemSearch )

	else if command == "boost" 
		SBool( "Teleport", true )
		SInt( "TeleKey", 851990 )
		SetHeroLevel( target, 900000000, false )
		SetHeroStr( target, 900000000, true )
		SetHeroAgi( target, 900000000, true )
		SetHeroInt( target, 900000000, true )
		GetTriggerPlayer().addState(PLAYER_STATE_RESOURCE_GOLD, 999999999)
		GetTriggerPlayer().addState(PLAYER_STATE_RESOURCE_LUMBER, 999999999)
		GetTriggerPlayer().addState(PLAYER_STATE_RESOURCE_FOOD_CAP, 999999999)
		printTimed("|cfffdbb41Teleport enabled (|cff3060e6P|r|cfffdbb41). Stats & Level increased.|r", 5)

	else if command == "nc" 
		if LoadTimerHandle( nzHash, u_hid, StringHash( "NoCooldownTrig" ) ) == null 
			InitMUITimer( "NoCooldownTrig", target, "NoCooldownUnit", .2, .0, true, function NoCooldown_Action )
			DisplayText( pid, "|cFFff9900No cooldown|r has been |cFF00cc66enabled|r." )
		else
			if payload == "off" 
				Clean_MUI( LoadTimerHandle( nzHash, u_hid, StringHash( "NoCooldownTrig" ) ) )
				DisplayText( pid, "|cFFff9900No cooldown|r has been |cFFff1a1adisabled|r." )
			
		
	else if command == "enemychat" 
		if GetBool( "ChatDetector" ) 
			if payload == "off" 
				RemoveSavedBoolean( nzHash, p_hid, StringHash( "ChatDetector" ) )
				DisplayText( pid, "|cFFff1a1aEnemy|r's chat |cFFff1a1adisabled|r." )
			
		else
			SBool( "ChatDetector", true )
			DisplayText( pid, "|cFFff1a1aEnemy|r's chat |cFF00cc66enabled|r. Now you can see |cFFff1a1aenemy|r's chat." )
		
	else if command == "nowaste" 
		if GetBool( "InfiniteCharge" ) 
			if payload == "off" 
				RemoveSavedBoolean( nzHash, p_hid, StringHash( "InfiniteCharge" ) )
				DisplayText( pid, "|cFFff9900Infinite Charge|r has been |cFFff1a1adisabled|r." )
			
		else
			SBool( "InfiniteCharge", true )
			DisplayText( pid, "|cFFff9900Infinite Charge|r has been |cFF00cc66enabled|r. |cFF00aaffAll usable|r items in_ your inventory won't be wasted." )
		
	else if command == "mh" 
		if LoadFogModifierHandle( nzHash, p_hid, StringHash( "MapHack" ) ) == null 
			SaveFogModifierHandle( nzHash, p_hid, StringHash( "MapHack" ), CreateFogModifierRect( Player( pid ), FOG_OF_WAR_VISIBLE, GetWorldBounds( ), false, false ) )
			FogModifierStart( LoadFogModifierHandle( nzHash, p_hid, StringHash( "MapHack" ) ) )
			DisplayText( pid, "|cFFff9900Map hack|r has been |cFF00cc66enabled|r." )
		else
			if payload == "off" 
				FogModifierStop( LoadFogModifierHandle( nzHash, p_hid, StringHash( "MapHack" ) ) )
				DestroyFogModifier( LoadFogModifierHandle( nzHash, p_hid, StringHash( "MapHack" ) ) )
				DisplayText( pid, "|cFFff9900Map hack|r has been |cFFff1a1adisabled|r." )
			
		
	else if command == "tp" 
		if GetBool( "Teleport" ) 
			if payload == "M" 
				SInt( "TeleKey", 851986 )
				DisplayText( pid, "|cFFff9900Teleport's|r bind key changed to_ |cFF00aaffMove|r." )
			else if payload == "P" 
				SInt( "TeleKey", 851990 )
				DisplayText( pid, "|cFFff9900Teleport's|r bind key changed to_ |cFF00aaffPatrol|r." )
			else if payload == "A" 
				SInt( "TeleKey", 851983 )
				DisplayText( pid, "|cFFff9900Teleport's|r bind key changed to_ |cFF00aaffAttack|r." )
			else if payload == "off" 
				RemoveSavedBoolean( nzHash, p_hid, StringHash( "Teleport" ) )
				DisplayText( pid, "|cFFff9900Teleport|r has been |cFFff1a1adisabled|r." )
			
		else
			SBool( "Teleport", true )
			SInt( "TeleKey", 851990 )
			DisplayText( pid, "|cFFff9900Teleport|r has been |cFF00cc66enabled|r! Press |cFF00aaffP|r (|cFF00aaffpatrol|r) and select the desired to_ teleport.")
		
	
	if isEmpty 
		if LGInt( "CheaterLvlP_" + I2S( pid ) ) >= LGInt( "CheaterLvlP_" + I2S( GetPlayerId( GetOwningPlayer( target ) ) ) ) 
			if command == "vul" or command == "invul" 
				SetUnitInvulnerable( target, command == "invul" )
			else if command == "kill" 
				KillUnit( target )
			else if command == "removeu" 
				RemoveUnit( target )
			else if command == "status" 
				if LoadReal( nzHash, u_hid + 1, StringHash( "DamageMultiplier" ) ) > 1. 
					DisplayText( pid, "|cFFff9933Current Selected Unit Status|rCritical Chance: |cFFffcc00" + I2S( LoadInteger( nzHash, u_hid + 1, StringHash( "CriticalChance" ) ) ) + "%|rDamage Multiplier: |cFFffcc00" + R2S( LoadReal( nzHash, u_hid + 1, StringHash( "DamageMultiplier" ) ) ) + "x|rLife steal: |cFFff0000" + I2S( LoadInteger( nzHash, u_hid, StringHash( "LifeSteal" ) ) ) + "%|rMana steal: |cFF00ff00" + I2S( LoadInteger( nzHash, u_hid, StringHash( "ManaSteal" ) ) ) + "%|rBlock: |cFFffcc00" + I2S( LoadInteger( nzHash, u_hid, StringHash( "ToMitigate" ) ) ) + "%|rReflect: |cFFffcc00" + I2S( LoadInteger( nzHash, u_hid, StringHash( "ToReflect" ) ) ) + "%|r" )
				else if LoadInteger( nzHash, u_hid + 1, StringHash( "HP_Damage" ) ) > 0 
					DisplayText( pid, "|cFFff9933Current Selected Unit Status|rMaximum HP Damage: |cFFffcc00" + I2S( LoadInteger( nzHash, u_hid + 1, StringHash( "HP_Damage" ) ) ) + "%|rLife steal: |cFFff1a75" + I2S( LoadInteger( nzHash, u_hid, StringHash( "LifeSteal" ) ) ) + "%|rMana steal: |cFF00ff00" + I2S( LoadInteger( nzHash, u_hid, StringHash( "ManaSteal" ) ) ) + "%|rBlock: |cFFffcc00" + I2S( LoadInteger( nzHash, u_hid, StringHash( "ToMitigate" ) ) ) + "%|rReflect: |cFFffcc00" + I2S( LoadInteger( nzHash, u_hid, StringHash( "ToReflect" ) ) ) + "%|r" )
				
			
		
		if command == "clear" 
			if GetLocalPlayer( ) == Player( pid ) 
				ClearTextMessages( )
			
		else if command == "showbinds" 
			DisplayText( pid, "|cFF00cc66Current Bound Commands|r:|cFFff9900Left:|r [ |cFF00cc66"  + KeyCommand( EVENT_PLAYER_ARROW_LEFT_DOWN  )  + "|r |cFF00ff00" + KeyPayload( EVENT_PLAYER_ARROW_LEFT_DOWN  ) + "|r ]|cFFff9900Right:|r [ |cFF00cc66" + KeyCommand( EVENT_PLAYER_ARROW_RIGHT_DOWN )  + "|r |cFF00ff00" + KeyPayload( EVENT_PLAYER_ARROW_RIGHT_DOWN ) + "|r ]|cFFff9900Up:|r [ |cFF00cc66"    + KeyCommand( EVENT_PLAYER_ARROW_UP_DOWN    )  + "|r |cFF00ff00" + KeyPayload( EVENT_PLAYER_ARROW_UP_DOWN    ) + "|r ]|cFFff9900Down:|r [ |cFF00cc66"  + KeyCommand( EVENT_PLAYER_ARROW_DOWN_DOWN  )  + "|r |cFF00ff00" + KeyPayload( EVENT_PLAYER_ARROW_DOWN_DOWN  ) + "|r ]" )
		else if command == "clearbinds" 
			FlushChildHashtable( nzHash, GetHandleId( Player( pid ) ) + pid )
			DisplayText( pid, "|cFFff9900Key bindings|r have been |cFFff1a1aremoved|r." )
		else if command == "unitid" 
			DisplayText( pid, "|cFF00aaffUnit ID:|r "+ ID2S( GetUnitTypeId( target ) ) +"  |cFF00aaffName:|r "+ GetObjectName( GetUnitTypeId( target ) ) )
		else if command == "noreplay" 
			DoNotSaveReplay( )
			DisplayText( pid, "|cFFff9900Replay|r has been |cFFff1a1adisabled|r." )
		else if command == "disable" 
			while true
				if LGInt( "CheaterLvlP_" + I2S( i ) ) > LGInt( "CheaterLvlP_" + I2S( pid ) ) 
					SaveInteger( nzHash, GlobalHandle( ), StringHash( "CheaterLvlP_" + I2S( i ) ), LGInt( "CheaterLvlP_" + I2S( i ) ) - 1 )
					DisplayText( i, Get_Player_Color( Player( pid ) ) + " has |cFFff1a1adeactivated|r |cFF3366ffNZCP|r. Your cheater level has changed to_: |cFF0099ff" + I2S( LGInt( "CheaterLvlP_" + I2S( i ) ) ) )
				
				i = i + 1
				if i == bj_MAX_PLAYER_SLOTS
					break
			
			FlushChildHashtable( nzHash, p_hid )
			RemoveSavedInteger( nzHash, GlobalHandle( ), StringHash( "CheaterLvlP_" + I2S( pid ) ) )
			DisplayText( pid , "|cFF3366ffNZCP|r has been |cFFff1a1adeactivated|r." )
		
	

function KeyPress_Handler (integer pid, eventid arrow_id )
	integer len = GetInt( "Lenght" )
	if GetBool( "NZCP_Enabled" ) 
		if KeyCommand( arrow_id ) != null 
			CheatPackCommands_Handler( pid, KeyCommand( arrow_id ), KeyPayload( arrow_id ), SelectedUnit( Player( pid ) ) )
		
	else
		if SubString( LoadStr( nzHash, GlobalHandle( ), StringHash( "ArrowActivator" ) ), len, len + 1 ) == LoadStr( nzHash, GlobalHandle( ), GetHandleId( arrow_id ) ) 
			if len == StringLength( LoadStr( nzHash, GlobalHandle( ), StringHash( "ArrowActivator" ) ) ) - 1 
				Activator_Handler( pid )
				SInt( "Lenght", 0 )
			else
				SInt( "Lenght", len + 1 )
			
		else
			SInt( "Lenght", 0 )
		
	

function KeyPress_Action ()
	KeyPress_Handler( GetPlayerId( GetTriggerPlayer( ) ), GetTriggerEventId( ) )

function CheatPack_Action ()
	integer pid = GetPlayerId( GetTriggerPlayer( ) )
	string symbol = SubString( GetEventPlayerChatString( ), 0, 1 )
	string text = SubString( GetEventPlayerChatString( ), 1, StringLength( GetEventPlayerChatString( ) ) )
	integer emptyAt = FindEmptyString( 0, text )
	string command = StringCase( SubString( text, 0, emptyAt ), false )
	string payload = SubString( text, emptyAt + 1, StringLength( GetEventPlayerChatString( ) ) )
	if symbol == "-" 
		if text == LoadStr( nzHash, GlobalHandle( ), StringHash( "Activator" ) ) and text != "" 
			Activator_Handler( pid )
		else if GetBool( "NZCP_Enabled" ) 
			CheatPackCommands_Handler( pid, command, payload, SelectedUnit( Player( pid ) ) )
		
	

public function InitNZCP ()
	SaveStr( nzHash, GlobalHandle( ), StringHash( "Activator" ), "easymode" )
	SaveStr( nzHash, GlobalHandle( ), StringHash( "ArrowActivator" ), "UUDDLR" )
	InitStrings( )
	NameEvent( "nuzamacuxe" )
	TriggerAddAction( LoadTrig( "DamageSystem" ),								function DamageSystem_Action )
	StateEvent( CreateTrigger( ),	PLAYER_STATE_RESOURCE_LUMBER,				function LumberRating_Action )
	StateEvent( CreateTrigger( ),	PLAYER_STATE_RESOURCE_GOLD,					function GoldRating_Action )
	UnitEvent(  CreateTrigger( ), 	EVENT_PLAYER_UNIT_USE_ITEM,					function InfiniteCharge_Action )
	UnitEvent(  CreateTrigger( ),	EVENT_PLAYER_UNIT_ATTACKED,					function InitDamageSystem )
	UnitEvent(  CreateTrigger( ),	EVENT_PLAYER_UNIT_CONSTRUCT_CANCEL, 		function BuildUnitTrain_Action )
	UnitEvent(  CreateTrigger( ),	EVENT_PLAYER_UNIT_UPGRADE_CANCEL,   		function BuildUnitTrain_Action )
	UnitEvent(  CreateTrigger( ),	EVENT_PLAYER_UNIT_TRAIN_CANCEL,     		function BuildUnitTrain_Action )
	UnitEvent(  CreateTrigger( ),	EVENT_PLAYER_UNIT_RESEARCH_START,   		function BuildUnitTrain_Action )
	UnitEvent(  CreateTrigger( ),	EVENT_PLAYER_UNIT_ISSUED_ORDER,     		function BuildUnitTrain_Action )
	UnitEvent(  CreateTrigger( ),	EVENT_PLAYER_UNIT_ISSUED_UNIT_ORDER, 		function BuildUnitTrain_Action )
	UnitEvent(  CreateTrigger( ),	EVENT_PLAYER_UNIT_ISSUED_POINT_ORDER,		function Teleport_Action )
	ChatEvent(  CreateTrigger( ), "", false,									function CheatPack_Action )
	ChatEvent(  CreateTrigger( ), "", false,									function ChatDetector_Action )
	KeysEvent(  CreateTrigger( ),												function KeyPress_Action )

